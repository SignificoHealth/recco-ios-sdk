# This workflow will build a Swift project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-swift

name: Run tests

on:
  pull_request:
    branches: [ "main" ]
  issue_comment:
    types: [ created ]
  workflow_dispatch:

env:
  TEST_SCHEME: ReccoUITests
  DEVICE_NAME: iPhone 14
  DEVICE_OS: 16.4
  IS_CI: true

jobs:
  test:
    name: Run iOS tests
    runs-on: macos-13
    permissions:
      statuses: write 
    steps:
    - name: Publish pending status
      uses: actions/github-script@v6
      with:
        script: |
          await github.rest.checks.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            head_sha: context.sha,
            name: "Run iOS tests",
            status: "pending",
            // Careful, code injection can happen.
            conclusion: "${{ github.event.workflow_run.conclusion }}",
            // This is safe, not string interpolation.
            details_url: process.env.parameter_url,
            output: {
              title: "Run iOS Tests",
              summary: "Summary",
              text: "Text",
            },
          });
    - name: Add workflow finished comment to PR
      uses: actions/github-script@v6
      with:
        script: |
          const name = '${{ github.workflow }}';
          const url = '${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}';
          const success = '${{ job.status }}' === 'success';
          const body = `Workflow [${name}](${url}): ${success ? 'succeeded ✅' : 'failed ❌'}`;

          await github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: body
          })
    - name: Publish finish status
      uses: actions/github-script@v6
      with:
        script: |
          await github.rest.repos.createCommitStatus({
            context.repo.owner,
            context.repo.repo,
            ${{ github.event.sha }},
            'success'
          });