//
// FeedSectionDTO.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

internal struct FeedSectionDTO: Codable, JSONEncodable, Hashable {

    internal var type: FeedSectionTypeDTO
    internal var state: FeedSectionStateDTO
    internal var locked: Bool
    internal var topic: TopicDTO?

    internal init(type: FeedSectionTypeDTO, state: FeedSectionStateDTO, locked: Bool, topic: TopicDTO? = nil) {
        self.type = type
        self.state = state
        self.locked = locked
        self.topic = topic
    }

    internal enum CodingKeys: String, CodingKey, CaseIterable {
        case type
        case state
        case locked
        case topic
    }

    // Encodable protocol methods

    internal func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(type, forKey: .type)
        try container.encode(state, forKey: .state)
        try container.encode(locked, forKey: .locked)
        try container.encodeIfPresent(topic, forKey: .topic)
    }
}

