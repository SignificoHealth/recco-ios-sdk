//
// QuestionnaireAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class QuestionnaireAPI {

    /**
     Set user app answers for a questionnaire.
     
     - parameter questionnaireAnswersDTO: (body)  
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func answers(questionnaireAnswersDTO: QuestionnaireAnswersDTO) async throws {
        return try await answersWithRequestBuilder(questionnaireAnswersDTO: questionnaireAnswersDTO).execute().body
    }

    /**
     Set user app answers for a questionnaire.
     - POST /api/v1/me/questionnaire/answers
     - BASIC:
       - type: http
       - name: bearerAuth
     - parameter questionnaireAnswersDTO: (body)  
     - returns: RequestBuilder<Void> 
     */
    open class func answersWithRequestBuilder(questionnaireAnswersDTO: QuestionnaireAnswersDTO) -> RequestBuilder<Void> {
        let localVariablePath = "/api/v1/me/questionnaire/answers"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: questionnaireAnswersDTO)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = OpenAPIClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Return the associated questionnaire for a given topic.
     
     - parameter topicId: (path)  
     - returns: QuestionnaireDTO
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getQuestionnaireByTopic(topicId: Int) async throws -> QuestionnaireDTO {
        return try await getQuestionnaireByTopicWithRequestBuilder(topicId: topicId).execute().body
    }

    /**
     Return the associated questionnaire for a given topic.
     - GET /api/v1/me/questionnaire/topics/{topicId}
     - BASIC:
       - type: http
       - name: bearerAuth
     - parameter topicId: (path)  
     - returns: RequestBuilder<QuestionnaireDTO> 
     */
    open class func getQuestionnaireByTopicWithRequestBuilder(topicId: Int) -> RequestBuilder<QuestionnaireDTO> {
        var localVariablePath = "/api/v1/me/questionnaire/topics/{topicId}"
        let topicIdPreEscape = "\(APIHelper.mapValueToPathItem(topicId))"
        let topicIdPostEscape = topicIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{topicId}", with: topicIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<QuestionnaireDTO>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Return the onboarding questionnaires.
     
     - returns: [QuestionnaireDTO]
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func onboarding() async throws -> [QuestionnaireDTO] {
        return try await onboardingWithRequestBuilder().execute().body
    }

    /**
     Return the onboarding questionnaires.
     - GET /api/v1/me/questionnaire/onboarding_questionnaires
     - BASIC:
       - type: http
       - name: bearerAuth
     - returns: RequestBuilder<[QuestionnaireDTO]> 
     */
    open class func onboardingWithRequestBuilder() -> RequestBuilder<[QuestionnaireDTO]> {
        let localVariablePath = "/api/v1/me/questionnaire/onboarding_questionnaires"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<[QuestionnaireDTO]>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Set user app answers for the onboarding questionnaires.
     
     - parameter questionnaireAnswersDTO: (body)  
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func onboardingAnswers(questionnaireAnswersDTO: [QuestionnaireAnswersDTO]) async throws {
        return try await onboardingAnswersWithRequestBuilder(questionnaireAnswersDTO: questionnaireAnswersDTO).execute().body
    }

    /**
     Set user app answers for the onboarding questionnaires.
     - POST /api/v1/me/questionnaire/onboarding_answers
     - BASIC:
       - type: http
       - name: bearerAuth
     - parameter questionnaireAnswersDTO: (body)  
     - returns: RequestBuilder<Void> 
     */
    open class func onboardingAnswersWithRequestBuilder(questionnaireAnswersDTO: [QuestionnaireAnswersDTO]) -> RequestBuilder<Void> {
        let localVariablePath = "/api/v1/me/questionnaire/onboarding_answers"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: questionnaireAnswersDTO)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = OpenAPIClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
