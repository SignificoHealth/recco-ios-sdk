//
// RecommendationAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class RecommendationAPI {

    /**
     A list of content filtered by topic.
     
     - parameter topicId: (path)  
     - returns: [AppUserRecommendationDTO]
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func exploreContentByTopic(topicId: Int) async throws -> [AppUserRecommendationDTO] {
        return try await exploreContentByTopicWithRequestBuilder(topicId: topicId).execute().body
    }

    /**
     A list of content filtered by topic.
     - GET /api/v1/me/recommendations/explore/topics/{topicId}
     - BASIC:
       - type: http
       - name: bearerAuth
     - parameter topicId: (path)  
     - returns: RequestBuilder<[AppUserRecommendationDTO]> 
     */
    open class func exploreContentByTopicWithRequestBuilder(topicId: Int) -> RequestBuilder<[AppUserRecommendationDTO]> {
        var localVariablePath = "/api/v1/me/recommendations/explore/topics/{topicId}"
        let topicIdPreEscape = "\(APIHelper.mapValueToPathItem(topicId))"
        let topicIdPostEscape = topicIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{topicId}", with: topicIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<[AppUserRecommendationDTO]>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Get article.
     
     - parameter recommendationId: (path)  
     - returns: AppUserArticleDTO
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getArticle(recommendationId: String) async throws -> AppUserArticleDTO {
        return try await getArticleWithRequestBuilder(recommendationId: recommendationId).execute().body
    }

    /**
     Get article.
     - GET /api/v1/me/recommendations/articles/{recommendationId}
     - BASIC:
       - type: http
       - name: bearerAuth
     - parameter recommendationId: (path)  
     - returns: RequestBuilder<AppUserArticleDTO> 
     */
    open class func getArticleWithRequestBuilder(recommendationId: String) -> RequestBuilder<AppUserArticleDTO> {
        var localVariablePath = "/api/v1/me/recommendations/articles/{recommendationId}"
        let recommendationIdPreEscape = "\(APIHelper.mapValueToPathItem(recommendationId))"
        let recommendationIdPostEscape = recommendationIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{recommendationId}", with: recommendationIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<AppUserArticleDTO>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     A list of most popular content.
     
     - returns: [AppUserRecommendationDTO]
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getMostPopularContent() async throws -> [AppUserRecommendationDTO] {
        return try await getMostPopularContentWithRequestBuilder().execute().body
    }

    /**
     A list of most popular content.
     - GET /api/v1/me/recommendations/most_popular
     - BASIC:
       - type: http
       - name: bearerAuth
     - returns: RequestBuilder<[AppUserRecommendationDTO]> 
     */
    open class func getMostPopularContentWithRequestBuilder() -> RequestBuilder<[AppUserRecommendationDTO]> {
        let localVariablePath = "/api/v1/me/recommendations/most_popular"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<[AppUserRecommendationDTO]>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     A list of newest content.
     
     - returns: [AppUserRecommendationDTO]
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getNewestContent() async throws -> [AppUserRecommendationDTO] {
        return try await getNewestContentWithRequestBuilder().execute().body
    }

    /**
     A list of newest content.
     - GET /api/v1/me/recommendations/newest
     - BASIC:
       - type: http
       - name: bearerAuth
     - returns: RequestBuilder<[AppUserRecommendationDTO]> 
     */
    open class func getNewestContentWithRequestBuilder() -> RequestBuilder<[AppUserRecommendationDTO]> {
        let localVariablePath = "/api/v1/me/recommendations/newest"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<[AppUserRecommendationDTO]>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     A list of starting recommendations.
     
     - returns: [AppUserRecommendationDTO]
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getStartingRecommendations() async throws -> [AppUserRecommendationDTO] {
        return try await getStartingRecommendationsWithRequestBuilder().execute().body
    }

    /**
     A list of starting recommendations.
     - GET /api/v1/me/recommendations/starting
     - BASIC:
       - type: http
       - name: bearerAuth
     - returns: RequestBuilder<[AppUserRecommendationDTO]> 
     */
    open class func getStartingRecommendationsWithRequestBuilder() -> RequestBuilder<[AppUserRecommendationDTO]> {
        let localVariablePath = "/api/v1/me/recommendations/starting"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<[AppUserRecommendationDTO]>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     A list of tailored recommendations filtered by topic.
     
     - parameter topicId: (path)  
     - returns: [AppUserRecommendationDTO]
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getTailoredRecommendationsByTopic(topicId: Int) async throws -> [AppUserRecommendationDTO] {
        return try await getTailoredRecommendationsByTopicWithRequestBuilder(topicId: topicId).execute().body
    }

    /**
     A list of tailored recommendations filtered by topic.
     - GET /api/v1/me/recommendations/tailored/topics/{topicId}
     - BASIC:
       - type: http
       - name: bearerAuth
     - parameter topicId: (path)  
     - returns: RequestBuilder<[AppUserRecommendationDTO]> 
     */
    open class func getTailoredRecommendationsByTopicWithRequestBuilder(topicId: Int) -> RequestBuilder<[AppUserRecommendationDTO]> {
        var localVariablePath = "/api/v1/me/recommendations/tailored/topics/{topicId}"
        let topicIdPreEscape = "\(APIHelper.mapValueToPathItem(topicId))"
        let topicIdPostEscape = topicIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{topicId}", with: topicIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<[AppUserRecommendationDTO]>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     A list of recommendations which are improved by the preferences.
     
     - returns: [AppUserRecommendationDTO]
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getUserPreferredRecommendations() async throws -> [AppUserRecommendationDTO] {
        return try await getUserPreferredRecommendationsWithRequestBuilder().execute().body
    }

    /**
     A list of recommendations which are improved by the preferences.
     - GET /api/v1/me/recommendations/preferred
     - BASIC:
       - type: http
       - name: bearerAuth
     - returns: RequestBuilder<[AppUserRecommendationDTO]> 
     */
    open class func getUserPreferredRecommendationsWithRequestBuilder() -> RequestBuilder<[AppUserRecommendationDTO]> {
        let localVariablePath = "/api/v1/me/recommendations/preferred"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<[AppUserRecommendationDTO]>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Set recommendation rating.
     
     - parameter updateRatingDTO: (body)  
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func setRating(updateRatingDTO: UpdateRatingDTO) async throws {
        return try await setRatingWithRequestBuilder(updateRatingDTO: updateRatingDTO).execute().body
    }

    /**
     Set recommendation rating.
     - PUT /api/v1/me/recommendations/rating
     - BASIC:
       - type: http
       - name: bearerAuth
     - parameter updateRatingDTO: (body)  
     - returns: RequestBuilder<Void> 
     */
    open class func setRatingWithRequestBuilder(updateRatingDTO: UpdateRatingDTO) -> RequestBuilder<Void> {
        let localVariablePath = "/api/v1/me/recommendations/rating"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: updateRatingDTO)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = OpenAPIClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "PUT", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Set recommendation status.
     
     - parameter updateStatusDTO: (body)  
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func setStatus(updateStatusDTO: UpdateStatusDTO) async throws {
        return try await setStatusWithRequestBuilder(updateStatusDTO: updateStatusDTO).execute().body
    }

    /**
     Set recommendation status.
     - PUT /api/v1/me/recommendations/status
     - BASIC:
       - type: http
       - name: bearerAuth
     - parameter updateStatusDTO: (body)  
     - returns: RequestBuilder<Void> 
     */
    open class func setStatusWithRequestBuilder(updateStatusDTO: UpdateStatusDTO) -> RequestBuilder<Void> {
        let localVariablePath = "/api/v1/me/recommendations/status"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: updateStatusDTO)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = OpenAPIClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "PUT", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
