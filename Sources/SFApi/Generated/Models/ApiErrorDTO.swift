//
// ApiErrorDTO.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ApiErrorDTO: Codable, JSONEncodable, Hashable {

    public enum ErrorCodeDTO: String, Codable, CaseIterable {
        case unknown = "UNKNOWN"
        case resourceNotFound = "RESOURCE_NOT_FOUND"
        case unauthorized = "UNAUTHORIZED"
        case appDisabled = "APP_DISABLED"
        case badRequest = "BAD_REQUEST"
        case conflict = "CONFLICT"
    }
    public var errorCode: ErrorCodeDTO
    public var message: String
    public var traceId: String

    public init(errorCode: ErrorCodeDTO, message: String, traceId: String) {
        self.errorCode = errorCode
        self.message = message
        self.traceId = traceId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case errorCode
        case message
        case traceId
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(errorCode, forKey: .errorCode)
        try container.encode(message, forKey: .message)
        try container.encode(traceId, forKey: .traceId)
    }
}

