//
// FeedSectionDTO.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct FeedSectionDTO: Codable, JSONEncodable, Hashable {

    public enum TypeDTO: String, Codable, CaseIterable {
        case physicalActivityRecommendations = "PHYSICAL_ACTIVITY_RECOMMENDATIONS"
        case nutritionRecommendations = "NUTRITION_RECOMMENDATIONS"
        case physicalWellbeingRecommendations = "PHYSICAL_WELLBEING_RECOMMENDATIONS"
        case sleepRecommendations = "SLEEP_RECOMMENDATIONS"
        case preferredRecommendations = "PREFERRED_RECOMMENDATIONS"
        case mostPopular = "MOST_POPULAR"
        case newContent = "NEW_CONTENT"
        case physicalActivityExplore = "PHYSICAL_ACTIVITY_EXPLORE"
        case nutritionExplore = "NUTRITION_EXPLORE"
        case physicalWellbeingExplore = "PHYSICAL_WELLBEING_EXPLORE"
        case sleepExplore = "SLEEP_EXPLORE"
        case startingRecommendations = "STARTING_RECOMMENDATIONS"
    }
    public var type: TypeDTO
    public var locked: Bool
    public var topicId: Int?

    public init(type: TypeDTO, locked: Bool, topicId: Int? = nil) {
        self.type = type
        self.locked = locked
        self.topicId = topicId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case type
        case locked
        case topicId
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(type, forKey: .type)
        try container.encode(locked, forKey: .locked)
        try container.encodeIfPresent(topicId, forKey: .topicId)
    }
}

